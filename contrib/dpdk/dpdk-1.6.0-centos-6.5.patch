diff -rupN DPDK-1.6.0-orig/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_ethtool.c DPDK-1.6.0/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_ethtool.c
--- DPDK-1.6.0-orig/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_ethtool.c	2014-04-15 14:08:25.096015259 +0800
+++ DPDK-1.6.0/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_ethtool.c	2014-04-15 13:57:51.362015329 +0800
@@ -41,7 +41,7 @@
 #include "igb_regtest.h"
 #include <linux/if_vlan.h>
 #ifdef ETHTOOL_GEEE
-#include <linux/mdio.h>
+//#include <linux/mdio.h>
 #endif
 
 #ifdef ETHTOOL_OPS_COMPAT
diff -rupN DPDK-1.6.0-orig/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_main.c DPDK-1.6.0/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_main.c
--- DPDK-1.6.0-orig/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_main.c	2014-04-15 14:08:29.698015508 +0800
+++ DPDK-1.6.0/lib/librte_eal/linuxapp/kni/ethtool/igb/igb_main.c	2014-04-15 13:57:57.470015327 +0800
@@ -2295,11 +2295,13 @@ static const struct net_device_ops igb_n
 	.ndo_vlan_rx_register	= igb_vlan_mode,
 #endif
 #ifdef NTF_SELF
-	.ndo_fdb_add		= igb_ndo_fdb_add,
+//	.ndo_fdb_add		= igb_ndo_fdb_add,
 #ifndef USE_DEFAULT_FDB_DEL_DUMP
-	.ndo_fdb_del		= igb_ndo_fdb_del,
-	.ndo_fdb_dump		= igb_ndo_fdb_dump,
+//	.ndo_fdb_del		= igb_ndo_fdb_del,
+//	.ndo_fdb_dump		= igb_ndo_fdb_dump,
+
 #endif
+
 #ifdef HAVE_BRIDGE_ATTRIBS
 	.ndo_bridge_setlink	= igb_ndo_bridge_setlink,
 	.ndo_bridge_getlink	= igb_ndo_bridge_getlink,
diff -rupN DPDK-1.6.0-orig/lib/librte_eal/linuxapp/kni/ethtool/igb/kcompat.h DPDK-1.6.0/lib/librte_eal/linuxapp/kni/ethtool/igb/kcompat.h
--- DPDK-1.6.0-orig/lib/librte_eal/linuxapp/kni/ethtool/igb/kcompat.h	2014-04-15 14:08:38.402015269 +0800
+++ DPDK-1.6.0/lib/librte_eal/linuxapp/kni/ethtool/igb/kcompat.h	2014-04-15 13:59:36.236015321 +0800
@@ -3463,7 +3463,7 @@ static inline void __kc_skb_frag_unref(s
 #endif
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,3,0) )
-typedef u32 netdev_features_t;
+//typedef u32 netdev_features_t;
 #undef PCI_EXP_TYPE_RC_EC
 #define  PCI_EXP_TYPE_RC_EC	0xa	/* Root Complex Event Collector */
 #ifndef CONFIG_BQL
@@ -3688,11 +3688,11 @@ int __kc_pcie_capability_clear_and_set_w
 
 #define PCI_EXP_LNKSTA2		50	/* Link Status 2 */
 
-static inline int pcie_capability_clear_word(struct pci_dev *dev, int pos,
+/*static inline int pcie_capability_clear_word(struct pci_dev *dev, int pos,
 					     u16 clear)
 {
 	return __kc_pcie_capability_clear_and_set_word(dev, pos, clear, 0);
-}
+}*/
 #endif /* !(SLE_VERSION_CODE && SLE_VERSION_CODE >= SLE_VERSION(11,3,0)) */
 
 #if (SLE_VERSION_CODE && SLE_VERSION_CODE >= SLE_VERSION(11,3,0))
@@ -3717,14 +3717,14 @@ static inline int pcie_capability_clear_
 static const u8 eth_reserved_addr_base[ETH_ALEN] __aligned(2) = {
 	0x01, 0x80, 0xc2, 0x00, 0x00, 0x00 };
 #if !(SLE_VERSION_CODE && SLE_VERSION_CODE >= SLE_VERSION(11,3,0))
-static inline bool is_link_local_ether_addr(const u8 *addr)
+/*static inline bool is_link_local_ether_addr(const u8 *addr)
 {
 	__be16 *a = (__be16 *)addr;
 	static const __be16 *b = (const __be16 *)eth_reserved_addr_base;
 	static const __be16 m = cpu_to_be16(0xfff0);
 
 	return ((a[0] ^ b[0]) | (a[1] ^ b[1]) | ((a[2] ^ b[2]) & m)) == 0;
-}
+}*/
 #endif /* !(SLE_VERSION_CODE && SLE_VERSION_CODE >= SLE_VERSION(11,3,0)) */
 #else /* >= 3.8.0 */
 #ifndef __devinit
diff -rupN DPDK-1.6.0-orig/lib/librte_eal/linuxapp/kni/ethtool/ixgbe/kcompat.h DPDK-1.6.0/lib/librte_eal/linuxapp/kni/ethtool/ixgbe/kcompat.h
--- DPDK-1.6.0-orig/lib/librte_eal/linuxapp/kni/ethtool/ixgbe/kcompat.h	2014-04-15 14:08:49.194015412 +0800
+++ DPDK-1.6.0/lib/librte_eal/linuxapp/kni/ethtool/ixgbe/kcompat.h	2014-04-15 14:00:13.883015086 +0800
@@ -3082,7 +3082,7 @@ static inline void __kc_skb_frag_unref(s
 
 /*****************************************************************************/
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION(3,3,0) )
-typedef u32 netdev_features_t;
+//typedef u32 netdev_features_t;
 #else /* ! < 3.3.0 */
 #define HAVE_INT_NDO_VLAN_RX_ADD_VID
 #ifdef ETHTOOL_SRXNTUPLE
